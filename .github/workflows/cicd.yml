# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Build and Deploy to GKE

on:
  push:
    branches:
      - master
      - develop

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-1    # Add your cluster name here.
  GKE_ZONE: us-east1-b   # Add your cluster zone here.
  DEPLOYMENT_NAME: mailengine # Add your deployment name here.
  IMAGE: fishemi-mailengine
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud auth configure-docker us.gcr.io

      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            --tag "us.gcr.io/$PROJECT_ID/$IMAGE:$BRANCH_NAME" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "us.gcr.io/$PROJECT_ID/$IMAGE:$BRANCH_NAME"

      # Deploy the Docker image to the GKE cluster (PROD)
      - name: Deploy to PROD
        if: ${{ env.BRANCH_NAME == 'master' }}
        run: |-
          kubectl rollout restart deployment/$DEPLOYMENT_NAME
          kubectl get pods

      # Deploy the Docker image to the GKE cluster (PREPROD)
      - name: Deploy to PREPROD
        if: ${{ env.BRANCH_NAME == 'develop' }}
        run: |-
          kubectl rollout restart deployment/$DEPLOYMENT_NAME-preprod
          kubectl get pods
